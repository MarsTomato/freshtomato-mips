--- accel-pptp/src/dirutil.c
+++ accel-pptp/src/dirutil.c
@@ -37,7 +37,7 @@ char *dirnamex(char *pathname)
  * stripslash("/") returns "/";
  */
 char *stripslash(char *pathname) {
-    int len = strlen(pathname);
+    size_t len = strlen(pathname);
     while (len > 1 && pathname[len - 1] == '/')
         pathname[--len] = '\0';
     return pathname;
--- accel-pptp/src/pptp.c
+++ accel-pptp/src/pptp.c
@@ -81,7 +81,7 @@ int call_ID;
 
 //static struct in_addr get_ip_address(char *name);
 static int open_callmgr(int call_id,struct in_addr inetaddr, char *phonenr,int window);
-static void launch_callmgr(int call_is,struct in_addr inetaddr, char *phonenr,int window);
+static void launch_callmgr(int call_id, struct in_addr inetaddr, char *phonenr, int window);
 static int get_call_id(int sock, pid_t gre, pid_t pppd, u_int16_t *peer_call_id);
 
 static int route_add(const struct in_addr inetaddr, struct rtentry *rt);
@@ -341,7 +341,7 @@ static int get_call_id(int sock, pid_t g
     /* don't bother with network byte order, because pid's are meaningless
      * outside the local host.
      */
-    int rc;
+    ssize_t rc;
     rc = write(sock, &gre, sizeof(gre));
     if (rc != sizeof(gre))
         return -1;
--- accel-pptp/src/vector.c
+++ accel-pptp/src/vector.c
@@ -81,7 +81,7 @@ int vector_insert(VECTOR *v, int key, PP
 #ifdef VECTOR_DEBUG
     assert(v->key_max < key);
 #endif
-    if (!(v->size < v->alloc)) {
+    if (v->size >= v->alloc) {
         void *tmp = realloc(v->item, sizeof(*(v->item)) * 2 * v->alloc);
         if (tmp != NULL) {
             v->alloc *= 2;
