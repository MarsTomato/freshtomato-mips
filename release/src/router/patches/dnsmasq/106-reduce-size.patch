--- dnsmasq/src/dnsmasq.h
+++ dnsmasq/src/dnsmasq.h
@@ -1312,15 +1312,25 @@ int wildcard_match(const char* wildcard,
 #endif
 
 /* log.c */
+#ifdef NO_OPTSIZE
+void my_syslog(int priority, const char *format, ...);
 void die(char *message, char *arg1, int exit_code) ATTRIBUTE_NORETURN;
 int log_start(struct passwd *ent_pw, int errfd);
 int log_reopen(char *log_file);
-
-void my_syslog(int priority, const char *format, ...);
-
 void set_log_writer(void);
 void check_log_writer(int force);
 void flush_log(void);
+#else
+#define my_syslog(prio, fmt, ...) do { } while(0)
+#define die(message, a, exit_code) exit(exit_code)
+static int inline log_start(struct passwd *ent_pw, int errfd) {
+	return 0;
+}
+#define log_reopen(file) do { } while(0)
+#define set_log_writer() do { } while(0)
+#define check_log_writer(set) do { } while(0)
+#define flush_log() do { } while(0)
+#endif
 
 /* option.c */
 void read_opts (int argc, char **argv, char *compile_opts);
--- dnsmasq/src/log.c
+++ dnsmasq/src/log.c
@@ -14,6 +14,7 @@
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#ifdef NO_OPTSIZE
 #include "dnsmasq.h"
 
 #ifdef __ANDROID__
@@ -473,3 +474,4 @@ void die(char *message, char *arg1, int
   
   exit(exit_code);
 }
+#endif /* NO_OPTSIZE */
--- dnsmasq/src/rfc2131.c
+++ dnsmasq/src/rfc2131.c
@@ -33,8 +33,15 @@ static void option_put_string(struct dhc
 			      int opt, char *string, int null_term);
 static struct in_addr option_addr(unsigned char *opt);
 static unsigned int option_uint(unsigned char *opt, int offset, int size);
+
+#ifdef NO_OPTSIZE
 static void log_packet(char *type, void *addr, unsigned char *ext_mac, 
 		       int mac_len, char *interface, char *string, char *err, u32 xid);
+#else
+#define log_packet(type, addr, mac, mac_len, interface, str, err, xid) do { } while(0)
+#define log_options(start, xid) do { } while(0)
+#endif
+
 static unsigned char *option_find(struct dhcp_packet *mess, size_t size, int opt_type, int minsize);
 static unsigned char *option_find1(unsigned char *p, unsigned char *end, int opt, int minsize);
 static size_t dhcp_packet_size(struct dhcp_packet *mess, unsigned char *agent_id, unsigned char *real_end);
@@ -1669,6 +1676,7 @@ static void add_extradata_opt(struct dhc
 }
 #endif
 
+#ifdef NO_OPTSIZE
 static void log_packet(char *type, void *addr, unsigned char *ext_mac, 
 		       int mac_len, char *interface, char *string, char *err, u32 xid)
 {
@@ -1722,6 +1730,7 @@ static void log_options(unsigned char *s
       start += start[1] + 2;
     }
 }
+#endif /* NO_OPTSIZE */
 
 static unsigned char *option_find1(unsigned char *p, unsigned char *end, int opt, int minsize)
 {
