--- pppd/pppd/ipv6cp.c
+++ pppd/pppd/ipv6cp.c
@@ -245,6 +245,8 @@ static option_t ipv6cp_option_list[] = {
 
     { "ipv6cp-accept-local", o_bool, &ipv6cp_allowoptions[0].accept_local,
       "Accept peer's interface identifier for us", 1 },
+    { "ipv6cp-accept-remote", o_bool, &ipv6cp_allowoptions[0].accept_remote,
+      "Accept peer's interface identifier for itself", 1 },
 
     { "defaultroute6", o_bool, &ipv6cp_wantoptions[0].default_route,
       "Add default IPv6 route", OPT_ENABLE|1, &ipv6cp_allowoptions[0].default_route },
@@ -444,6 +446,7 @@ ipv6cp_init(unit)
     memset(ao, 0, sizeof(*ao));
 
     wo->accept_local = 1;
+    wo->accept_remote = 1;
     wo->neg_ifaceid = 1;
     ao->neg_ifaceid = 1;
 
@@ -973,7 +976,7 @@ ipv6cp_reqci(f, inp, len, reject_if_disagree)
 		orc = CONFREJ;		/* Reject CI */
 		break;
 	    }
-	    if (!eui64_iszero(wo->hisid) && 
+	    if (!eui64_iszero(wo->hisid) && !wo->accept_remote &&
 		!eui64_equals(ifaceid, wo->hisid) && 
 		eui64_iszero(go->hisid)) {
 		    
--- pppd/pppd/ipv6cp.h
+++ pppd/pppd/ipv6cp.h
@@ -151,7 +151,8 @@
     int neg_ifaceid;		/* Negotiate interface identifier? */
     int req_ifaceid;		/* Ask peer to send interface identifier? */
     int default_route;		/* Assign default route through interface? */
-    int accept_local;		/* accept peer's value for iface id? */
+    int accept_local;		/* accept peer's value for our iface id? */
+    int accept_remote;		/* accept peer's value for his iface id? */
     int opt_local;		/* ourtoken set by option */
     int opt_remote;		/* histoken set by option */
     int use_ip;			/* use IP as interface identifier */
--- pppd/pppd/options.c
+++ pppd/pppd/options.c
@@ -78,6 +78,7 @@
 #if defined(ultrix) || defined(NeXT)
 char *strdup __P((char *));
 #endif
+bool tx_only;			/* idle time counting on tx traffic */
 
 
 struct option_value {
@@ -360,6 +361,10 @@ option_t general_options[] = {
       "Check for traffic limit every N seconds", OPT_PRIO | OPT_LLIMIT | 1 },
 #endif
 
+    /* add for tx_only option */
+    { "tx_only", o_bool, &tx_only,
+      "set idle time counting on tx_only or not", 1 },
+
     { NULL }
 };
 
--- pppd/pppd/pppd.h
+++ pppd/pppd/pppd.h
@@ -223,6 +223,7 @@ struct notifier {
 /*
  * Global variables.
  */
+extern bool tx_only;			/* idle time counting on tx traffic */
 
 extern int	hungup;		/* Physical layer has disconnected */
 extern int	ifunit;		/* Interface unit number */
