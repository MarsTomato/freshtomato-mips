--- pppd/pppd/auth.c
+++ pppd/pppd/auth.c
@@ -230,6 +230,7 @@ bool refuse_eap = 0;		/* Don't wanna aut
 #ifdef CHAPMS
 bool refuse_mschap = 0;		/* Don't wanna auth. ourselves with MS-CHAP */
 bool refuse_mschap_v2 = 0;	/* Don't wanna auth. ourselves with MS-CHAPv2 */
+bool ms_ignore_domain = 0;
 #else
 bool refuse_mschap = 1;		/* Don't wanna auth. ourselves with MS-CHAP */
 bool refuse_mschap_v2 = 1;	/* Don't wanna auth. ourselves with MS-CHAPv2 */
@@ -317,6 +318,9 @@ option_t auth_options[] = {
       "Require MS-CHAPv2 authentication from peer",
       OPT_ALIAS | OPT_PRIOSUB | OPT_A2OR | MDTYPE_MICROSOFT_V2,
       &lcp_wantoptions[0].chap_mdtype },
+    { "ms-ignore-domain", o_bool, &ms_ignore_domain,
+      "Ignore any MS domain prefix in the username", 1 },
+
 #endif
 
     { "refuse-pap", o_bool, &refuse_pap,
--- pppd/pppd/chap-new.c
+++ pppd/pppd/chap-new.c
@@ -414,7 +414,13 @@ chap_verify_response(char *name, char *o
 	int ok;
 	unsigned char secret[MAXSECRETLEN];
 	int secret_len;
-
+#ifdef CHAPMS
+	char nametmp[MAXNAMELEN];
+	if (ms_ignore_domain && strrchr(name, '\\')) {
+		strcpy(nametmp, strrchr(name, '\\') + 1);
+		strcpy(name, nametmp);
+	}
+#endif
 	/* Get the secret that the peer is supposed to know */
 	if (!get_secret(0, name, ourname, (char *)secret, &secret_len, 1)) {
 		error("No CHAP secret found for authenticating %q", name);
--- pppd/pppd/pppd.h
+++ pppd/pppd/pppd.h
@@ -343,6 +343,9 @@ extern char	*bundle_name;	/* bundle name
 extern bool	dump_options;	/* print out option values */
 extern bool	dryrun;		/* check everything, print options, exit */
 extern int	child_wait;	/* # seconds to wait for children at end */
+#ifdef CHAPMS
+extern bool	ms_ignore_domain; /* Ignore any MS domain prefix */
+#endif
 
 #ifdef MAXOCTETS
 extern unsigned int maxoctets;	     /* Maximum octetes per session (in bytes) */
