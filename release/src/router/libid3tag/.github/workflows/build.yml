name: build

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Ubuntu
            os: ubuntu-latest
            install_dir: ~/libid3tag
            cmake_extras: -DCMAKE_BUILD_TYPE=RelWithDebInfo
          - name: macOS
            os: macos-latest
            install_dir: ~/libid3tag
            cmake_extras: -DCMAKE_BUILD_TYPE=RelWithDebInfo
          - name: Windows
            os: windows-latest
            install_dir: C:\libid3tag
            cmake_config: --config RelWithDebInfo
            cmake_extras: >-
              -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake
            vcpkg_tripet: x64-windows
            vcpkg_binary_cache: C:\Users\runneradmin\AppData\Local\vcpkg\archives

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2
    - name: Set up vcpkg cache
      uses: actions/cache@v2
      if: runner.os == 'Windows'
      with:
        path: ${{ matrix.vcpkg_binary_cache }}
        key: vcpkg-${{ github.head_ref }}-${{ github.run_number }}
        restore-keys: |
          vcpkg-${{ github.head_ref }}
          vcpkg
    - name: Install dependencies
      if: startsWith(matrix.os, 'windows')
      run: vcpkg install zlib
      env:
        VCPKG_DEFAULT_TRIPLET: ${{ matrix.vcpkg_tripet }}
    - name: Configure
      run: >-
        cmake
        -D CMAKE_INSTALL_PREFIX=${{ matrix.install_dir }}
        -D VCPKG_TARGET_TRIPLET=${{ matrix.vcpkg_tripet }}
        ${{ matrix.cmake_extras }}
        -S . -B build
    - name: Build
      run: cmake --build build ${{ matrix.cmake_config }}
      env:
        CMAKE_BUILD_PARALLEL_LEVEL: 2
    - name: Install
      run: cmake --install . ${{ matrix.cmake_config }}
      working-directory: build
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.name }} libid3tag build
        path: ${{ matrix.install_dir }}
